@model BusinessObject.BOUserInfo
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var selectedSpecialityGroup = new SelectList(ViewBag.SpecialiyGroups).FirstOrDefault(o => o.Value == Model.SpecialityGroupId.ToString());

    var selectedSpeciality = new SelectList(ViewBag.Specialities).FirstOrDefault(o => o.Value == Model.SpecialityId.ToString());

    
}
<div class="col-12">
    <h2>Sinh viên/Nhân viên</h2>
</div>
<div class="col-xl-6 col-md-6 col-sm-12">
    <div class="form-group">

        @Html.LabelFor(model => model.FirstName, new { @class = "font-weight-bold" })
        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", type = "text", required = true })
        @Html.ValidationMessageFor(model => model.FirstName, string.Empty, new { @class = "invalid-feedback" })


    </div>
</div>
<div class="col-xl-6 col-md-6 col-sm-12">
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", type = "text", required = true })
        @Html.ValidationMessageFor(model => model.LastName, string.Empty, new { @class = "invalid-feedback" })

    </div>
</div>
<div class="col-12">
    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @class = "font-weight-bold" })

        <div class="input-group">

            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = Model.IsHideEmail == true ? "password" : "text", required = true })
            <div class="input-group-append">
                <div class="input-group-text">

                    <input type="checkbox" name="IsHideEmail" class="chkHidField" value="@Model.IsHideEmail" checked="@(Model.IsHideEmail == true ? "" : null)" onchange="this.value = this.checked" />
                </div>
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.Email, string.Empty, new { @class = "invalid-feedback" })

    </div>
</div>
<div class="col-xl-6 col-md-6 col-sm-12">
    <div class="form-group">
        @Html.LabelFor(model => model.BirthDay, "Ngày sinh", new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.BirthDay, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = true })
        @Html.ValidationMessageFor(model => model.BirthDay, string.Empty, new { @class = "invalid-feedback" })

    </div>
</div>
<div class="col-xl-6 col-md-6 col-sm-12">
    <div class="form-group">

        @Html.LabelFor(model => model.Telephone, "Số điện thoại", new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.Telephone, new { @class = "form-control", required = true })
        @Html.ValidationMessageFor(model => model.Telephone, string.Empty, new { @class = "invalid-feedback" })

    </div>
</div>
<div class="col-xl-6 col-md-6 col-sm-12">
    <label class="font-weight-bold" for="sltSpecializaGroup">Khối ngành học/công tác</label>
    @Html.DropDownListFor(model => model.SpecialityGroupId, new SelectList(ViewBag.SpecialiyGroups, "Value", "Text", selectedSpecialityGroup), new { @class = "form-select form-group w-100", @id = "sltSpecialityGroup" })
    @*<select id="sltSpecializaGroup" class="form-select form-group w-100" asp-items="ViewBag.Specializations" onchange="onchangeSpecializations(this, '@Url.Action("SelectSpecializeGroup","User")')">
        </select>*@
</div>
<div class="col-xl-6 col-md-6 col-sm-12">
    <label class="font-weight-bold" for="sltDetailSpecialzes">Chi tiết ngành/học công tác</label>
    @*<select id="sltDetailSpecialzes" class="form-select form-group w-100" asp-items="ViewBag.Specialities">
        </select>*@
    @Html.DropDownListFor(model => model.SpecialityId, new SelectList(ViewBag.Specialities, "Value", "Text", selectedSpeciality), new { @class = "form-select form-group w-100", @id = "sltSpeciality" })

</div>
<div class="col-12">
    <label class="section_title font-weight-bold" for="inputGender">Giới tính</label>
</div>
<div class="col-6">
    <div class="form-group d-flex lh-1-1 justify-content-center">
        <label class="mr-2" for="radMale">Nam</label>
        <div class="primary-radio">
            @Html.RadioButtonFor(model => model.Sex, true, new { @class = "form-control", @id = "radMale", @checked = "checked" })
            <label for="radMale"></label>
        </div>
    </div>
</div>
<div class="col-6">
    <div class="form-group d-flex lh-1-1 justify-content-center">
        <label class="mr-2" for="radFeMale">Nữ</label>
        <div class="primary-radio">
            @Html.RadioButtonFor(model => model.Sex, false, new { @class = "form-control", @id = "radFeMale" })
            <label for="radFeMale"></label>
        </div>
    </div>
</div>

<div class="col-12">
    <div class="form-group">

        @Html.LabelFor(model => model.Address, new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", type = "text", required = true })
        @Html.ValidationMessageFor(model => model.Address, "Please enter this field", new { @class = "invalid-feedback" })
    </div>
</div>

<div class="col-12">
    <div class="form-group">

        @Html.LabelFor(model => model.Certificate, "Chứng chỉ đạt được", new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.Certificate, new { @class = "form-control", type = "text" })
    </div>
</div>
<div class="col-12">
    <label class="section_title font-weight-bold">Chức danh</label>
    @*<select asp-for="@Model.Title" class="form-select form-group w-100">
        <option value="sv">Sinh viên</option>
        <option value="nv">Nhân viên</option>
        
    </select>*@
    
    <div class="row">
        <div class="col-6">
            <div class="form-group d-flex lh-1-1 justify-content-center">
                <label class="mr-2" for="radSV">Sinh viên</label>
                <div class="primary-radio">
                    @Html.RadioButton("Title", "sv", Model.Title=="sv", new { @class = "form-control", id="radSV"})
                    <label for="radSV"></label>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="form-group d-flex lh-1-1 justify-content-center">
                <label class="mr-2" for="radNV">Nhân viên</label>
                <div class="primary-radio">
                    @Html.RadioButton("Title", "nv", Model.Title == "nv", new { @class = "form-control", id= "radNV" })

                    <label for="radNV"></label>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-12">
    <label class="font-weight-bold" for="sltExpectedJob">Tính chất công việc mong muốn</label>

    <select id="sltExpectedJob" asp-for="@Model.ExpectedWork" class="form-select form-group w-100">
        <option value="">--Chọn--</option>
        <option value="ft">Full-time</option>
        <option value="pt">Part-time</option>
        <option value="fl">Freelance</option>
        <option value="it">Intern</option>
    </select>

</div>
<div class="col-xl-6 col-md-6 col-sm-12">
    <div class="form-group">
        @Html.LabelFor(model => model.ExpectedSalary, "Mức lương kỳ vọng (VND/tháng)", new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.ExpectedSalary, new { @class = "form-control", type = "text" })

    </div>
</div>
<div class="col-xl-6 col-md-6 col-sm-12">
    <div class="form-group">

        @Html.LabelFor(model => model.SchoolYear, "Niên khóa", new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.SchoolYear, new { @class = "form-control", type = "text" })
    </div>
</div>
<div class="col-12">
    <div class="form-group">
        @Html.LabelFor(model => model.ExtraSkill, "Additional Skills", new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.ExtraSkill, new { @class = "form-control", type = "text" })

    </div>
</div>
<div class="col-12">
    <div class="form-group">
        @Html.LabelFor(model => model.Department, "Phòng ban công tác", new { @class = "font-weight-bold" })

        @Html.TextBoxFor(model => model.Department, new { @class = "form-control", type = "text" })

    </div>
</div>

<div class="col-12">
    <label class="font-weight-bold" for="inputLastName">Hợp tác với HBIC</label>
</div>
@{ for (int i = 0; i < Model.FieldHbicCoops.Count(); i++)
    {
        var id = Model.FieldHbicCoops[i].Value;
        var name = Model.FieldHbicCoops[i].Text;
        <div class="col-xl-4 col-md-4 col-sm-12">
            <div class="custom-control form-group custom-checkbox">
                @*id="@id" checked="@i.Selected" value="@id"*@
                <input type="checkbox" class="custom-control-input" asp-for="@Model.FieldHbicCoops[i].Selected">
                @*@Html.CheckBoxFor(model => model.FieldHbicCoops[i].Value,)*@
                <label class="custom-control-label" asp-for="@Model.FieldHbicCoops[i].Selected">@name</label>
                <input type="hidden" asp-for="@Model.FieldHbicCoops[i].Value" />
                <input type="hidden" asp-for="@Model.FieldHbicCoops[i].Text" />
            </div>
        </div>
    }
}
@*<div class="col-xl-4 col-md-4 col-sm-12">
        <div class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" id="customCheck2">
            <label class="custom-control-label" for="customCheck2">Nhận dự án từ thành viên của hệ sinh thái HBIC</label>
        </div>
    </div>
    <div class="col-xl-4 col-md-4 col-sm-12">
        <div class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" id="customCheck3">
            <label class="custom-control-label" for="customCheck3">Nhận thông tin các sự kiện được tổ chức bởi HBIC và các đối tác ĐMST</label>
        </div>
    </div>*@